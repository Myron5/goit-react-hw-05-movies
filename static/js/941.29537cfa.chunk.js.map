{"version":3,"file":"static/js/941.29537cfa.chunk.js","mappings":"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","sources":["components/MovieDetailsItem/MovieDetailsItem.jsx","pages/MovieDetails/MovieDetails.jsx","services/tmdbAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const MovieDetailsItem = ({ film }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  if (Object.keys(film).length === 0) return;\n\n  return (\n    <div>\n      <div>\n        <img src={film.poster} alt=\"\" onLoad={() => setIsLoaded(true)} />\n        {!isLoaded && <p>–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</p>}\n      </div>\n\n      <ul>\n        <li>\n          <h1>\n            {film.title} ({film.year})\n          </h1>\n        </li>\n        <li>\n          <h2>User score</h2>\n          <p>{film.vote_average}</p>\n        </li>\n        <li>\n          <h2>Overview</h2>\n          <p>{film.overview}</p>\n        </li>\n        <li>\n          <h2>Genres</h2>\n          <ul>\n            {film.genres.map(({ id, name }) => (\n              <li key={id}>\n                <p>{name}</p>\n              </li>\n            ))}\n          </ul>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nMovieDetailsItem.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string,\n    poster: PropTypes.string,\n    year: PropTypes.number,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { MovieDetailsItem } from '../../components/MovieDetailsItem/MovieDetailsItem';\nimport { getDetails, getFilmPhoto } from '../../services';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [film, setFilm] = useState({});\n\n  const setDetails = async () => {\n    try {\n      const dataFilm = await getDetails(movieId);\n\n      setFilm({\n        title: dataFilm.title,\n        poster: getFilmPhoto(dataFilm.poster_path),\n        vote_average: dataFilm.vote_average,\n        backdrop: getFilmPhoto(dataFilm.backdrop_path),\n        year: new Date(dataFilm.release_date).getFullYear(),\n        overview: dataFilm.overview,\n        genres: dataFilm.genres,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await setDetails();\n    })();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <Link to={backLinkLocationRef.current}>‚óÄ –ù–∞–∑–∞–¥</Link>\n      </div>\n      <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;üìÅ–î–µ—Ç–∞–ª—ñ —Ñ—ñ–ª—å–º—É ... {movieId}</p>\n      <br />\n      <MovieDetailsItem film={film} />\n      <br />\n      <ul>\n        <li>\n          <Link to={`cast`}>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;üé≠–°–∫–ª–∞–¥ –∞–∫—Ç–æ—Ä—ñ–≤\n          </Link>\n        </li>\n        <li>\n          <Link to={`reviews`}>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;üôà–í—ñ–¥–≥—É–∫–∏ –∫—Ä–∏—Ç–∏–∫—ñ–≤\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º —Å—Ç–æ—Ä—ñ–Ω–∫—É...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8741a9c14c2465a0e7b18901e07e7ee9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst staticURLparams = {\n  api_key: API_KEY,\n};\n\n// –°–ø–∏—Å–æ–∫ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ\nexport const getPopular = async (page, token = null) => {\n  const searchParams = new URLSearchParams({ ...staticURLparams, page });\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`, {\n    cancelToken: token,\n  });\n  return data;\n};\n\n// –ü–æ—à—É–∫ —Ñ—ñ–ª—å–º—É –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º\nexport const getByKeyWord = async (query, page) => {\n  const searchParams = new URLSearchParams({ ...staticURLparams, query, page });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  return data;\n};\n\n// –ó–∞–ø–∏—Ç –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ñ—ñ–ª—å–º\nexport const getDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\n// –ó–∞–ø–∏—Ç —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–∫—Ç–æ—Ä—Å—å–∫–∏–π —Å–∫–ª–∞–¥\nexport const getCreditDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\n// –ó–∞–ø–∏—Ç –æ–≥–ª—è–¥—ñ–≤ —Ñ—ñ–ª—å–º—É\nexport const getReviewsDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\n// –û—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–æ—Ç–æ –∞–±–æ –ø–æ—Å—Ç–µ—Ä —Ñ—ñ–ª—å–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É\n// (–ø–∞—Ä–∞–º–µ—Ç—Ä poster_path –∞–±–æ backdrop_path –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑ API –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ)\nexport const getFilmPhoto = path => {\n  return path ? `https://image.tmdb.org/t/p/w500${path}` : 'default';\n};\n"],"names":["MovieDetailsItem","film","useState","isLoaded","setIsLoaded","Object","keys","length","src","poster","alt","onLoad","title","year","vote_average","overview","genres","map","id","name","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","setFilm","setDetails","getDetails","dataFilm","getFilmPhoto","poster_path","backdrop","backdrop_path","Date","release_date","getFullYear","console","log","useEffect","to","current","Suspense","fallback","axios","staticURLparams","api_key","getPopular","page","token","searchParams","URLSearchParams","cancelToken","data","getByKeyWord","query","getCreditDetails","getReviewsDetails","path"],"sourceRoot":""}