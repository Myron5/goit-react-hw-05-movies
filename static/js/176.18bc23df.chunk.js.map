{"version":3,"file":"static/js/176.18bc23df.chunk.js","mappings":"sPAEaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,2BACE,mBACA,qCAAaD,MACb,mBACA,uBAAIC,MAGT,E,SCNYC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAiB,mCAAG,uGACEC,EAAAA,EAAAA,IAAkBN,GADpB,gBAChBO,EADgB,EAChBA,QAERH,EACEG,EAAQC,KAAI,SAAAC,GAAM,MAAK,CACrBC,GAAID,EAAOC,GACXb,OAAQY,EAAOZ,OACfC,QAASW,EAAOX,QAHA,KAJI,2CAAH,qDAmBvB,OAPAa,EAAAA,EAAAA,YAAU,YACR,iBAAC,8FACON,IADP,0CAAD,EAID,GAAE,KAGD,0BACE,0BACsB,IAAnBF,EAAQS,SAAgB,2MACxBT,EAAQK,KAAI,gBAAGE,EAAH,EAAGA,GAAIb,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7BY,EADP,QAMpB,C,gOCnCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAkB,CACtBC,QAJc,oCAQHC,EAAU,mCAAG,WAAOC,GAAP,gGAAaC,EAAb,+BAAqB,KACvCC,EAAe,IAAIC,iBAAJ,kBAAyBN,GAAzB,IAA0CG,KAAAA,KADvC,SAEDJ,EAAAA,EAAAA,IAAA,8BAAiCM,GAAgB,CACtEE,YAAaH,IAHS,uBAEhBI,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,2CAAH,sDASVC,EAAY,mCAAG,WAAOC,EAAOP,GAAd,kFACpBE,EAAe,IAAIC,iBAAJ,kBAAyBN,GAAzB,IAA0CU,MAAAA,EAAOP,KAAAA,KAD5C,SAEHJ,EAAAA,EAAAA,IAAA,wBAA2BM,IAFxB,uBAElBG,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,wDAOZG,EAAU,mCAAG,WAAMf,GAAN,kFAClBS,EAAe,IAAIC,iBAAJ,UAAyBN,IADtB,SAEDD,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,YAA0BS,IAFzB,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,sDAOVI,EAAgB,mCAAG,WAAMhB,GAAN,kFACxBS,EAAe,IAAIC,iBAAJ,UAAyBN,IADhB,SAEPD,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCS,IAF3B,uBAEtBG,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,2CAAH,sDAOhBhB,EAAiB,mCAAG,WAAMI,GAAN,kFACzBS,EAAe,IAAIC,iBAAJ,UAAyBN,IADf,SAERD,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCS,IAF1B,uBAEvBG,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,sDAQjBK,EAAe,SAAAC,GAC1B,OAAOA,EAAI,yCAAqCA,GAAS,SAC1D,C","sources":["components/ReviewsItem/ReviewsItem.jsx","pages/Reviews/Reviews.jsx","services/tmdbAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ author, content }) => {\n  return (\n    <li>\n      <hr />\n      <h2>Author: {author}</h2>\n      <br />\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem } from '../../components/ReviewsItem/ReviewsItem';\nimport { getReviewsDetails } from '../../services';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const setReviewsDetails = async () => {\n    const { results } = await getReviewsDetails(movieId);\n\n    setReviews(\n      results.map(review => ({\n        id: review.id,\n        author: review.author,\n        content: review.content,\n      }))\n    );\n  };\n\n  useEffect(() => {\n    (async () => {\n      await setReviewsDetails();\n    })();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length === 0 && <div>⛔ Немає відгуків для цього фільму</div>}\n        {reviews.map(({ id, author, content }) => (\n          <ReviewsItem key={id} author={author} content={content} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '8741a9c14c2465a0e7b18901e07e7ee9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst staticURLparams = {\n  api_key: API_KEY,\n};\n\n// Список найпопулярніших фільмів на сьогодні\nexport const getPopular = async (page, token = null) => {\n  const searchParams = new URLSearchParams({ ...staticURLparams, page });\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`, {\n    cancelToken: token,\n  });\n  return data;\n};\n\n// Пошук фільму за ключовим словом\nexport const getByKeyWord = async (query, page) => {\n  const searchParams = new URLSearchParams({ ...staticURLparams, query, page });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  return data;\n};\n\n// Запит повної інформації про фільм\nexport const getDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\n// Запит інформації про акторський склад\nexport const getCreditDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\n// Запит оглядів фільму\nexport const getReviewsDetails = async id => {\n  const searchParams = new URLSearchParams({ ...staticURLparams });\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\n// Отримати фото або постер фільму відповідно до параметру\n// (параметр poster_path або backdrop_path приходить з API відповіді)\nexport const getFilmPhoto = path => {\n  return path ? `https://image.tmdb.org/t/p/w500${path}` : 'default';\n};\n"],"names":["ReviewsItem","author","content","Reviews","movieId","useParams","useState","reviews","setReviews","setReviewsDetails","getReviewsDetails","results","map","review","id","useEffect","length","axios","staticURLparams","api_key","getPopular","page","token","searchParams","URLSearchParams","cancelToken","data","getByKeyWord","query","getDetails","getCreditDetails","getFilmPhoto","path"],"sourceRoot":""}